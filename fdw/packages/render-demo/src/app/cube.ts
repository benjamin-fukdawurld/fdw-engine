/**
 *
 *
 *
 *                            ------------
 *                           /    |y     /|
 *     7---------6          /     |     / |
 *    /|        /|         /           /  |
 *   / |       / |         --------- --   |
 *  /  |      /  |        |           |   |
 * 2---------3   |        |           [  -|--x
 * |   5-----|---4        |           [   |
 * |  /      |  /         |     /     |   /
 * | /       | /          |    /      |  /
 * |/        |/           |   /z      | /
 * 0---------1            |___________|/
 *
 *
 * v:
 *  0: [-1, -1, 1]
 *  1: [1, -1, 1]
 *  2: [-1, 1, 1]
 *  3: [1, 1, 1]
 *
 *  4: [1, -1, -1]
 *  5: [-1, -1, -1]
 *  6: [1, 1, -1]
 *  7: [-1, 1, -1]
 *
 * vt:
 *  0: [0, 0]
 *  1: [1, 0]
 *  2: [0, 1]
 *  3: [1, 1]
 *
 * vn:
 *  0: [1, 0, 0]
 *  2: [-1, 0, 0]
 *  3: [0, 1, 0]
 *  4: [0, -1, 0]
 *  5: [0, 0, 1]
 *  6: [0, 0, -1]
 *
 * indexes:
 *     7--6
 *     |\T|
 *     |T\|
 *  7__2--3__6__7
 *  |\L|\F|\R|\B|
 *  |L\|F\|R\|B\|
 *  5  0--1  4  5
 *     |\D|
 *     |D\|
 *     5--4
 *
 *
 *
 * [
 *  (0, 0, 5), (1, 1, 5), (2, 2, 5), // FRONT
 *  (2, 2, 5), (1, 1, 5), (3, 3, 5), // FRONT
 *
 *  (4, 0, 6), (5, 1, 6), (6, 2, 6), // BACK
 *  (6, 2, 6), (5, 1, 6) (7, 3, 6), // BACK
 *
 *  (1, 0, 1), (4, 1, 1), (3, 2, 1), // RIGHT
 *  (3, 2, 1), (4, 1, 1), (6, 3, 1), // RIGHT
 *
 *  (5, 0, 2), (0, 1, 2), (7, 2, 2), // LEFT
 *  (7, 2, 2), (0, 1, 2), (2, 3, 2), // LEFT
 *
 *  (2, 0, 3), (3, 1, 3), (7, 2, 3), // TOP
 *  (7, 2, 3), (3, 1, 3), (6, 3, 3), // TOP
 *
 *  (5, 0, 4), (4, 1, 4), (0, 2, 4), // DOWN
 *  (0, 2, 4), (4, 1, 4), (1, 3, 4), // DOWN
 *
 * ]
 */

import { MeshData } from './mesh/types';

export const Cube: MeshData = {
  positions: new Float32Array([
    // 0
    -0.5, -0.5, 0.5,
    // 1
    0.5, -0.5, 0.5,
    // 2
    -0.5, 0.5, 0.5,
    // 3
    0.5, 0.5, 0.5,
    // 4
    0.5, -0.5, -0.5,
    // 5
    -0.5, -0.5, -0.5,
    // 6
    0.5, 0.5, -0.5,
    // 7
    -0.5, 0.5, -0.5,
  ]),
  uvs: new Float32Array([
    // 0
    0, 0,
    // 1
    1, 0,
    // 2
    0, 1,
    // 3
    1, 1,
  ]),
  normals: new Float32Array([
    // 0
    1, 0, 0,
    // 1
    -1, 0, 0,
    // 2
    0, 1, 0,
    // 3
    0, -1, 0,
    // 4
    0, 0, 1,
    // 5
    0, 0, -1,
  ]),
  indices: new Uint16Array([
    // FRONT
    // 0
    0, 0, 5,
    // 1
    1, 1, 5,
    // 2
    2, 2, 5,
    // FRONT
    // 3
    2, 2, 5,
    // 4
    1, 1, 5,
    // 5
    3, 3, 5,

    // BACK
    // 6
    4, 0, 6,
    // 7
    5, 1, 6,
    // 8
    6, 2, 6,
    // BACK
    // 9
    6, 2, 6,
    // 10
    5, 1, 6,
    // 11
    7, 3, 6,

    // RIGHT
    // 12
    1, 0, 1,
    // 13
    4, 1, 1,
    // 14
    3, 2, 1,
    // RIGHT
    // 15
    3, 2, 1,
    // 16
    4, 1, 1,
    //17
    6, 3, 1,

    // LEFT
    // 18
    5, 0, 2,
    // 19
    0, 1, 2,
    // 20
    7, 2, 2,
    // LEFT
    //21
    7, 2, 2,
    // 22
    0, 1, 2,
    // 23
    2, 3, 2,

    // TOP
    // 24
    2, 0, 3,
    // 25
    3, 1, 3,
    // 26
    7, 2, 3,
    // TOP
    // 27
    7, 2, 3,
    // 28
    3, 1, 3,
    // 29
    6, 3, 3,

    // DOWN
    // 30
    5, 0, 4,
    // 31
    4, 1, 4,
    // 32
    0, 2, 4,
    // DOWN
    // 33
    0, 2, 4,
    // 34
    4, 1, 4,
    // 35
    1, 3, 4,
  ]),
} as const;
